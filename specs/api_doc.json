{"openapi":"3.1.0","info":{"title":"Platform Crypto API","description":"\n    The Platform Crypto API provides robust and secure management of cryptographic operations, enabling businesses and developers to integrate encryption and decryption processes into their applications. This API supports both symmetric and asymmetric cryptography methods, allowing for flexible and secure handling of sensitive data.\n\n        Key features include:\n        - Symmetric Encryption: Utilizes a single key for both encryption and decryption, ensuring efficient and fast cryptographic operations. Ideal for encrypting large datasets where performance is critical.\n        - Asymmetric Encryption: Implements public and private key pairs to perform secure encryption and decryption, ensuring confidentiality without the need to share keys. This is especially useful for secure communications and digital signatures.\n            - RSA: Supports RSA (Rivest-Shamir-Adleman) for secure data transmission and digital signatures. RSA is one of the most widely used asymmetric encryption algorithms.\n            - ECC: Supports ECC (Elliptic Curve Cryptography) for more efficient key generation and encryption, providing strong security with shorter key lengths compared to RSA.\n\n        The API allows for the management of:\n        - Workspaces: Organize and manage cryptographic operations within different workspaces.\n        - Keys: Generate, store, and manage encryption keys for both symmetric and asymmetric \n          encryption. The API supports key rotation and secure key storage.\n        - Encryption and Decryption: Perform cryptographic operations on data, ensuring \n          confidentiality and integrity.\n        - Digital Signatures: Create and verify digital signatures to authenticate data and \n          ensure its origin.\n        - Auditing: Maintain detailed logs for all cryptographic operations, providing \n          traceability and security compliance.\n\n    The Platform Crypto API is designed to meet the needs of high-security applications, offering flexibility in cryptographic algorithms, and is ideal for all the industries requiring secure data protection mechanisms.\n        ","version":"1.0.0"},"paths":{"/cryptoservice/api/v1/workspaces":{"post":{"tags":["Workspaces"],"summary":"Create Workspace","description":"Creates a new workspace in the system.\n\nArgs:\n    request (CreateWorkspaceRequest): The request body containing the details of the new workspace.\n\nReturns:\n    CreateWorkspaceResponse: The response model containing the details of the created workspace.","operationId":"create_workspace_cryptoservice_api_v1_workspaces_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateWorkspaceRequest"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateWorkspaceResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/cryptoservice/api/v1/workspaces/{workspaceId}":{"get":{"tags":["Workspaces"],"summary":"Fetch Workspace","description":"Fetches a specific workspace from the Platform crypto API.\n\nThis endpoint retrieves information about a particular workspace\nusing its unique `workspaceId`. The workspace data is fetched\nasynchronously from the `Crypto service`. The response will be\nstructured according to the `Workspace` schema,\nand the HTTP status code will be 200 (OK) if the request is successful.\n\nArgs:\n    workspaceId (str): The unique identifier of the workspace to be fetched.\n\nReturns:\n    CreateWorkspaceResponse: A response model containing the details of the workspace.","operationId":"fetch_workspace_cryptoservice_api_v1_workspaces__workspaceId__get","parameters":[{"name":"workspaceId","in":"path","required":true,"schema":{"type":"string","title":"Workspaceid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateWorkspaceResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/cryptoservice/api/v1/secrets":{"post":{"tags":["Secrets"],"summary":"Create Secrets","description":"Creates a new secret in the system.\n\nArgs:\n    request (SecretRequest): The request body containing the secret details to be created.\n\nReturns:\n    SecretResponse: The response model containing the created secret details.","operationId":"create_secrets_cryptoservice_api_v1_secrets_post","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SecretRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SecretResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["Secrets"],"summary":"Get Secrets","description":"Fetches the secret associated with the provided API key.\n\nArgs:\n    apiKey (str): The API key used to fetch the corresponding secret.\n\nReturns:\n    SecretResponse: The response model containing the fetched secret.","operationId":"get_secrets_cryptoservice_api_v1_secrets_get","parameters":[{"name":"apiKey","in":"query","required":true,"schema":{"type":"string","maxLength":50,"description":"Product API key to fetch the details","title":"Apikey"},"description":"Product API key to fetch the details"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SecretResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/cryptoservice/api/v1/encrypt":{"post":{"tags":["Encryption Service"],"summary":"Encrypt","description":"Encrypts the given payload using the specified encryption type ('symmetric' or 'asymmetric').\n\nArgs:\n    request (EncryptionRequest): The request body containing the data to encrypt.\n    apiKey (str): The API key used to fetch product details for encryption.\n\nReturns:\n    EncryptionResponse: The response model containing the encrypted data.","operationId":"encrypt_cryptoservice_api_v1_encrypt_post","parameters":[{"name":"apiKey","in":"query","required":true,"schema":{"type":"string","maxLength":50,"description":"Product API key to fetch the details","title":"Apikey"},"description":"Product API key to fetch the details"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EncryptionRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EncryptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/cryptoservice/api/v1/decrypt":{"post":{"tags":["Encryption Service"],"summary":"Decrypt","description":"Decrypts the given encrypted payload using the specified decryption type ('symmetric' or 'asymmetric').\n\nArgs:\n    payload (DecryptionRequest): The request body containing the encrypted data.\n    apiKey (str): The API key used to fetch product details for decryption.\n\nReturns:\n    DecryptionResponse: The response model containing the decrypted data.","operationId":"decrypt_cryptoservice_api_v1_decrypt_post","parameters":[{"name":"apiKey","in":"query","required":true,"schema":{"type":"string","maxLength":50,"description":"Product API key to fetch the details","title":"Apikey"},"description":"Product API key to fetch the details"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DecryptionRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DecryptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"CreateWorkspaceRequest":{"properties":{"projectName":{"type":"string","title":"Projectname"},"projectDescription":{"type":"string","title":"Projectdescription"},"slug":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Slug"},"kmsKeyId":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Kmskeyid","default":""},"template":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Template","default":""},"type":{"$ref":"#/components/schemas/WorkspaceType"}},"type":"object","required":["projectName","projectDescription","type"],"title":"CreateWorkspaceRequest"},"CreateWorkspaceResponse":{"properties":{"workspace":{"$ref":"#/components/schemas/Workspace"}},"type":"object","required":["workspace"],"title":"CreateWorkspaceResponse"},"DecryptionRequest":{"properties":{"enc":{"type":"string","title":"Enc"}},"type":"object","required":["enc"],"title":"DecryptionRequest"},"DecryptionResponse":{"properties":{"payload":{"title":"Payload"}},"type":"object","required":["payload"],"title":"DecryptionResponse"},"EncryptionRequest":{"properties":{"payload":{"title":"Payload"}},"type":"object","required":["payload"],"title":"EncryptionRequest","description":"Request schema for the encryption/decryption API.\nAccepts the payload and the encryption/decryption type."},"EncryptionResponse":{"properties":{"enc":{"type":"string","title":"Enc"}},"type":"object","required":["enc"],"title":"EncryptionResponse","description":"Response schema for the encryption/decryption API.\nReturns the encrypted or decrypted data (JWE or plaintext)."},"Environment":{"properties":{"name":{"type":"string","title":"Name"},"slug":{"type":"string","title":"Slug"},"id":{"type":"string","title":"Id"}},"type":"object","required":["name","slug","id"],"title":"Environment"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"ProjectType":{"type":"string","enum":["symmetric","asymmetric"],"title":"ProjectType"},"SecretRequest":{"properties":{"projectName":{"type":"string","pattern":"^[a-zA-Z0-9-]+$","title":"Projectname"},"projectDescription":{"type":"string","maxLength":255,"title":"Projectdescription"},"type":{"$ref":"#/components/schemas/ProjectType"},"certAlg":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Certalg"}},"type":"object","required":["projectName","projectDescription","type"],"title":"SecretRequest"},"SecretResponse":{"properties":{"projectId":{"type":"string","title":"Projectid"},"projectName":{"type":"string","title":"Projectname"},"apiKey":{"type":"string","title":"Apikey"},"slug":{"type":"string","title":"Slug"},"env":{"type":"string","title":"Env"},"type":{"type":"string","title":"Type"},"certAlg":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Certalg"},"privateKey":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Privatekey"},"certId":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Certid"}},"type":"object","required":["projectId","projectName","apiKey","slug","env","type"],"title":"SecretResponse"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"Workspace":{"properties":{"id":{"type":"string","title":"Id"},"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"type":{"$ref":"#/components/schemas/WorkspaceType"},"slug":{"type":"string","title":"Slug"},"autoCapitalization":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Autocapitalization","default":false},"orgId":{"type":"string","title":"Orgid"},"createdAt":{"type":"string","format":"date-time","title":"Createdat"},"updatedAt":{"type":"string","format":"date-time","title":"Updatedat"},"version":{"type":"integer","title":"Version"},"upgradeStatus":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Upgradestatus"},"pitVersionLimit":{"type":"integer","title":"Pitversionlimit"},"kmsCertificateKeyId":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Kmscertificatekeyid"},"auditLogsRetentionDays":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Auditlogsretentiondays","default":0},"environments":{"items":{"$ref":"#/components/schemas/Environment"},"type":"array","title":"Environments"}},"type":"object","required":["id","name","description","type","slug","orgId","createdAt","updatedAt","version","pitVersionLimit","environments"],"title":"Workspace"},"WorkspaceType":{"type":"string","enum":["secret-manager","cert-manager","kms","ssh"],"title":"WorkspaceType"}}}}